{"ast":null,"code":"import { RSocketClient } from 'rsocket-core';\nimport RSocketWebSocketClient from 'rsocket-websocket-client';\nimport { JsonSerializer } from 'rsocket-core';\nimport RSocketServiceModule from '/RSocketService';\nconst RSocketService = {\n  async authenticate(username, password) {\n    try {\n      // Установите соединение с сервером RSocket\n      const client = new RSocketClient({\n        transport: new RSocketWebSocketClient({\n          url: 'ws://localhost:8081/rsocket' // URL сервера RSocket\n        }),\n\n        serializers: {\n          data: JsonSerializer,\n          metadata: JsonSerializer\n        }\n      });\n\n      // Откройте соединение\n      await client.connect();\n\n      // Выполните запрос на сервер RSocket для аутентификации\n      const response = await client.requestResponse({\n        data: {\n          username: username,\n          password: password\n        },\n        metadata: {\n          type: 'AUTHENTICATION'\n        }\n      });\n\n      // Закройте соединение\n      client.close();\n      return response && response.data;\n    } catch (error) {\n      console.error('Ошибка при выполнении запроса:', error);\n      throw error;\n    }\n  }\n};\nexport default RSocketService;","map":{"version":3,"names":["RSocketClient","RSocketWebSocketClient","JsonSerializer","RSocketServiceModule","RSocketService","authenticate","username","password","client","transport","url","serializers","data","metadata","connect","response","requestResponse","type","close","error","console"],"sources":["/home/hordiienko/VueProjects/night-chat/src/service/RSocketService.js"],"sourcesContent":["import { RSocketClient } from 'rsocket-core';\nimport RSocketWebSocketClient from 'rsocket-websocket-client';\nimport { JsonSerializer } from 'rsocket-core';\nimport RSocketServiceModule from '/RSocketService';\n\nconst RSocketService = {\n  async authenticate(username, password) {\n    try {\n      // Установите соединение с сервером RSocket\n      const client = new RSocketClient({\n        transport: new RSocketWebSocketClient({\n          url: 'ws://localhost:8081/rsocket' // URL сервера RSocket\n        }),\n        serializers: {\n          data: JsonSerializer,\n          metadata: JsonSerializer\n        }\n      });\n\n      // Откройте соединение\n      await client.connect();\n\n      // Выполните запрос на сервер RSocket для аутентификации\n      const response = await client.requestResponse({\n        data: {\n          username: username,\n          password: password\n        },\n        metadata: {\n          type: 'AUTHENTICATION'\n        }\n      });\n\n      // Закройте соединение\n      client.close();\n\n      return response && response.data;\n    } catch (error) {\n      console.error('Ошибка при выполнении запроса:', error);\n      throw error;\n    }\n  }\n};\n\nexport default RSocketService;\n\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,OAAOC,sBAAsB,MAAM,0BAA0B;AAC7D,SAASC,cAAc,QAAQ,cAAc;AAC7C,OAAOC,oBAAoB,MAAM,iBAAiB;AAElD,MAAMC,cAAc,GAAG;EACrB,MAAMC,YAAYA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IACrC,IAAI;MACF;MACA,MAAMC,MAAM,GAAG,IAAIR,aAAa,CAAC;QAC/BS,SAAS,EAAE,IAAIR,sBAAsB,CAAC;UACpCS,GAAG,EAAE,6BAA6B,CAAC;QACrC,CAAC,CAAC;;QACFC,WAAW,EAAE;UACXC,IAAI,EAAEV,cAAc;UACpBW,QAAQ,EAAEX;QACZ;MACF,CAAC,CAAC;;MAEF;MACA,MAAMM,MAAM,CAACM,OAAO,CAAC,CAAC;;MAEtB;MACA,MAAMC,QAAQ,GAAG,MAAMP,MAAM,CAACQ,eAAe,CAAC;QAC5CJ,IAAI,EAAE;UACJN,QAAQ,EAAEA,QAAQ;UAClBC,QAAQ,EAAEA;QACZ,CAAC;QACDM,QAAQ,EAAE;UACRI,IAAI,EAAE;QACR;MACF,CAAC,CAAC;;MAEF;MACAT,MAAM,CAACU,KAAK,CAAC,CAAC;MAEd,OAAOH,QAAQ,IAAIA,QAAQ,CAACH,IAAI;IAClC,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAef,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}