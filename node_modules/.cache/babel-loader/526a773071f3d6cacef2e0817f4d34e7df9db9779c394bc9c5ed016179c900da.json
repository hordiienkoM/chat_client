{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { obtainSlot, optoinNullableMemberDecorator } from '../utils';\nexport const decorator = optoinNullableMemberDecorator(function (proto, name, key) {\n  const slot = obtainSlot(proto);\n  const map = slot.obtainMap('emit');\n  map.set(name, typeof key === 'undefined' ? null : key);\n});\nexport function build(cons, optionBuilder) {\n  var _a;\n  (_a = optionBuilder.methods) !== null && _a !== void 0 ? _a : optionBuilder.methods = {};\n  const proto = cons.prototype;\n  const slot = obtainSlot(proto);\n  const names = slot.obtainMap('emit');\n  const emits = slot.obtainMap('emits');\n  if (names) {\n    names.forEach((value, key) => {\n      const eventName = value === null ? key : value;\n      emits.set(eventName, true);\n      optionBuilder.methods[key] = function () {\n        return __awaiter(this, arguments, void 0, function* () {\n          const ret = proto[key].apply(this, arguments);\n          if (ret instanceof Promise) {\n            const proRet = yield ret;\n            this.$emit(eventName, proRet);\n          } else {\n            this.$emit(eventName, ret);\n          }\n        });\n      };\n    });\n  }\n}","map":{"version":3,"names":["obtainSlot","optoinNullableMemberDecorator","decorator","proto","name","key","slot","map","obtainMap","set","build","cons","optionBuilder","_a","methods","prototype","names","emits","forEach","value","eventName","ret","apply","arguments","Promise","proRet","$emit"],"sources":["../../../src/option/emit.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAASA,UAAU,EAAEC,6BAA6B,QAAQ,UAAU;AAGpE,OAAO,MAAMC,SAAS,GAAGD,6BAA6B,CAAC,UAAUE,KAAU,EAAEC,IAAY,EAAEC,GAAY;EACnG,MAAMC,IAAI,GAAGN,UAAU,CAACG,KAAK,CAAC;EAC9B,MAAMI,GAAG,GAAGD,IAAI,CAACE,SAAS,CAAC,MAAM,CAAC;EAClCD,GAAG,CAACE,GAAG,CAACL,IAAI,EAAE,OAAOC,GAAG,KAAK,WAAW,GAAG,IAAI,GAAGA,GAAG,CAAC;AAC1D,CAAC,CAAC;AAEF,OAAM,SAAUK,KAAKA,CAACC,IAAU,EAAEC,aAA4B;;EAC1D,CAAAC,EAAA,GAAAD,aAAa,CAACE,OAAO,cAAAD,EAAA,cAAAA,EAAA,GAArBD,aAAa,CAACE,OAAO,GAAK,EAAE;EAC5B,MAAMX,KAAK,GAAGQ,IAAI,CAACI,SAAS;EAC5B,MAAMT,IAAI,GAAGN,UAAU,CAACG,KAAK,CAAC;EAC9B,MAAMa,KAAK,GAAGV,IAAI,CAACE,SAAS,CAAC,MAAM,CAAC;EACpC,MAAMS,KAAK,GAAGX,IAAI,CAACE,SAAS,CAAC,OAAO,CAAC;EAErC,IAAIQ,KAAK,EAAE;IACPA,KAAK,CAACE,OAAO,CAAC,CAACC,KAAK,EAAEd,GAAG,KAAI;MACzB,MAAMe,SAAS,GAAGD,KAAK,KAAK,IAAI,GAAGd,GAAG,GAAGc,KAAK;MAC9CF,KAAK,CAACR,GAAG,CAACW,SAAS,EAAE,IAAI,CAAC;MAC1BR,aAAa,CAACE,OAAQ,CAACT,GAAG,CAAC,GAAG;;UAE1B,MAAMgB,GAAG,GAAGlB,KAAK,CAACE,GAAG,CAAC,CAACiB,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;UAC7C,IAAIF,GAAG,YAAYG,OAAO,EAAE;YACxB,MAAMC,MAAM,GAAG,MAAMJ,GAAG;YACxB,IAAI,CAACK,KAAK,CAACN,SAAS,EAAEK,MAAM,CAAC;WAChC,MACI;YACD,IAAI,CAACC,KAAK,CAACN,SAAS,EAAEC,GAAG,CAAC;;QAElC,CAAC;OAAA;IACL,CAAC,CAAC;;AAGV"},"metadata":{},"sourceType":"module","externalDependencies":[]}