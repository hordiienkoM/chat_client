{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2021-2022 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nrequire(\"core-js/modules/es.array.push.js\");\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TcpDuplexConnection = void 0;\nvar rsocket_core_1 = require(\"rsocket-core\");\nvar TcpDuplexConnection = /** @class */function (_super) {\n  __extends(TcpDuplexConnection, _super);\n  function TcpDuplexConnection(socket,\n  // dependency injected to facilitate testing\n  deserializer, multiplexerDemultiplexerFactory) {\n    var _this = _super.call(this) || this;\n    _this.socket = socket;\n    _this.deserializer = deserializer;\n    _this.remainingBuffer = Buffer.allocUnsafe(0);\n    /**\n     * Handles close event from the underlying socket.\n     * @param hadError\n     * @private\n     */\n    _this.handleClosed = function (hadError) {\n      var message = hadError ? \"TcpDuplexConnection: \".concat(_this.error.message) : \"TcpDuplexConnection: Socket closed unexpectedly.\";\n      _this.close(new Error(message));\n    };\n    /**\n     * Handles error events from the underlying socket. `handleClosed` is expected to be called\n     * immediately following `handleError`.\n     * @param error\n     * @private\n     */\n    _this.handleError = function (error) {\n      _this.error = error;\n    };\n    _this.handleData = function (chunks) {\n      var e_1, _a;\n      try {\n        // Combine partial frame data from previous chunks with the next chunk,\n        // then extract any complete frames plus any remaining data.\n        var buffer = Buffer.concat([_this.remainingBuffer, chunks]);\n        var lastOffset = 0;\n        var frames_2 = _this.deserializer.deserializeFrames(buffer);\n        try {\n          for (var frames_1 = __values(frames_2), frames_1_1 = frames_1.next(); !frames_1_1.done; frames_1_1 = frames_1.next()) {\n            var _b = __read(frames_1_1.value, 2),\n              frame = _b[0],\n              offset = _b[1];\n            lastOffset = offset;\n            _this.multiplexerDemultiplexer.handle(frame);\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (frames_1_1 && !frames_1_1.done && (_a = frames_1.return)) _a.call(frames_1);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n        _this.remainingBuffer = buffer.slice(lastOffset, buffer.length);\n      } catch (error) {\n        _this.close(error);\n      }\n    };\n    /**\n     * Emitted when an error occurs. The 'close' event will be called directly following this event.\n     */\n    socket.on(\"error\", _this.handleError);\n    /**\n     * Emitted once the socket is fully closed. The argument hadError is a boolean which says\n     * if the socket was closed due to a transmission error.\n     */\n    socket.on(\"close\", _this.handleClosed);\n    /**\n     * Emitted when data is received. The argument data will be a Buffer or String. Encoding of data is set by\n     * socket.setEncoding(). The data will be lost if there is no listener when a Socket emits a 'data' event.\n     */\n    socket.on(\"data\", _this.handleData);\n    _this.multiplexerDemultiplexer = multiplexerDemultiplexerFactory(_this);\n    return _this;\n  }\n  Object.defineProperty(TcpDuplexConnection.prototype, \"availability\", {\n    get: function () {\n      return this.done ? 0 : 1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  TcpDuplexConnection.prototype.close = function (error) {\n    if (this.done) {\n      return;\n    }\n    this.socket.off(\"error\", this.handleError);\n    this.socket.off(\"close\", this.handleClosed);\n    this.socket.off(\"data\", this.handleData);\n    this.socket.end();\n    delete this.socket;\n    _super.prototype.close.call(this, error);\n  };\n  TcpDuplexConnection.prototype.send = function (frame) {\n    if (this.done) {\n      return;\n    }\n    var buffer = (0, rsocket_core_1.serializeFrameWithLength)(frame);\n    this.socket.write(buffer);\n  };\n  return TcpDuplexConnection;\n}(rsocket_core_1.Deferred);\nexports.TcpDuplexConnection = TcpDuplexConnection;","map":{"version":3,"names":["require","rsocket_core_1","TcpDuplexConnection","_super","__extends","socket","deserializer","multiplexerDemultiplexerFactory","_this","call","remainingBuffer","Buffer","allocUnsafe","handleClosed","hadError","message","concat","error","close","Error","handleError","handleData","chunks","buffer","lastOffset","frames_2","deserializeFrames","frames_1","__values","frames_1_1","next","done","_b","__read","value","frame","offset","multiplexerDemultiplexer","handle","slice","length","on","Object","defineProperty","prototype","get","off","end","send","serializeFrameWithLength","write","Deferred","exports"],"sources":["../src/TcpDuplexConnection.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}