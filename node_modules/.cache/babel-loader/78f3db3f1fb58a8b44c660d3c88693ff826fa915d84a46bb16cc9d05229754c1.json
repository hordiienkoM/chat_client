{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2021-2022 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.regexp.flags.js\");\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RSocketServer = void 0;\nvar ClientServerMultiplexerDemultiplexer_1 = require(\"./ClientServerMultiplexerDemultiplexer\");\nvar Errors_1 = require(\"./Errors\");\nvar Frames_1 = require(\"./Frames\");\nvar RSocketSupport_1 = require(\"./RSocketSupport\");\nvar Resume_1 = require(\"./Resume\");\nvar RSocketServer = /** @class */function () {\n  function RSocketServer(config) {\n    var _a, _b;\n    this.acceptor = config.acceptor;\n    this.transport = config.transport;\n    this.lease = config.lease;\n    this.serverSideKeepAlive = config.serverSideKeepAlive;\n    this.sessionStore = config.resume ? {} : undefined;\n    this.sessionTimeout = (_b = (_a = config.resume) === null || _a === void 0 ? void 0 : _a.sessionTimeout) !== null && _b !== void 0 ? _b : undefined;\n  }\n  RSocketServer.prototype.bind = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.transport.bind(function (frame, connection) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var _a, error, error, leaseHandler, requester, responder, keepAliveHandler_1, keepAliveSender_1, connectionFrameHandler_1, streamsHandler, e_1;\n                var _b, _c, _d, _e;\n                return __generator(this, function (_f) {\n                  switch (_f.label) {\n                    case 0:\n                      _a = frame.type;\n                      switch (_a) {\n                        case Frames_1.FrameTypes.SETUP:\n                          return [3 /*break*/, 1];\n                        case Frames_1.FrameTypes.RESUME:\n                          return [3 /*break*/, 5];\n                      }\n                      return [3 /*break*/, 6];\n                    case 1:\n                      _f.trys.push([1, 3,, 4]);\n                      if (this.lease && !Frames_1.Flags.hasLease(frame.flags)) {\n                        error = new Errors_1.RSocketError(Errors_1.ErrorCodes.REJECTED_SETUP, \"Lease has to be enabled\");\n                        connection.multiplexerDemultiplexer.connectionOutbound.send({\n                          type: Frames_1.FrameTypes.ERROR,\n                          streamId: 0,\n                          flags: Frames_1.Flags.NONE,\n                          code: error.code,\n                          message: error.message\n                        });\n                        connection.close(error);\n                        return [2 /*return*/];\n                      }\n\n                      if (Frames_1.Flags.hasLease(frame.flags) && !this.lease) {\n                        error = new Errors_1.RSocketError(Errors_1.ErrorCodes.REJECTED_SETUP, \"Lease has to be disabled\");\n                        connection.multiplexerDemultiplexer.connectionOutbound.send({\n                          type: Frames_1.FrameTypes.ERROR,\n                          streamId: 0,\n                          flags: Frames_1.Flags.NONE,\n                          code: error.code,\n                          message: error.message\n                        });\n                        connection.close(error);\n                        return [2 /*return*/];\n                      }\n\n                      leaseHandler = Frames_1.Flags.hasLease(frame.flags) ? new RSocketSupport_1.LeaseHandler((_b = this.lease.maxPendingRequests) !== null && _b !== void 0 ? _b : 256, connection.multiplexerDemultiplexer) : undefined;\n                      requester = new RSocketSupport_1.RSocketRequester(connection, (_d = (_c = this.fragmentation) === null || _c === void 0 ? void 0 : _c.maxOutboundFragmentSize) !== null && _d !== void 0 ? _d : 0, leaseHandler);\n                      return [4 /*yield*/, this.acceptor.accept({\n                        data: frame.data,\n                        dataMimeType: frame.dataMimeType,\n                        metadata: frame.metadata,\n                        metadataMimeType: frame.metadataMimeType,\n                        flags: frame.flags,\n                        keepAliveMaxLifetime: frame.lifetime,\n                        keepAliveInterval: frame.keepAlive,\n                        resumeToken: frame.resumeToken\n                      }, requester)];\n                    case 2:\n                      responder = _f.sent();\n                      keepAliveHandler_1 = new RSocketSupport_1.KeepAliveHandler(connection, frame.lifetime);\n                      keepAliveSender_1 = this.serverSideKeepAlive ? new RSocketSupport_1.KeepAliveSender(connection.multiplexerDemultiplexer.connectionOutbound, frame.keepAlive) : undefined;\n                      connectionFrameHandler_1 = new RSocketSupport_1.DefaultConnectionFrameHandler(connection, keepAliveHandler_1, keepAliveSender_1, leaseHandler, responder);\n                      streamsHandler = new RSocketSupport_1.DefaultStreamRequestHandler(responder, 0);\n                      connection.onClose(function (e) {\n                        keepAliveSender_1 === null || keepAliveSender_1 === void 0 ? void 0 : keepAliveSender_1.close();\n                        keepAliveHandler_1.close();\n                        connectionFrameHandler_1.close(e);\n                      });\n                      connection.multiplexerDemultiplexer.connectionInbound(connectionFrameHandler_1);\n                      connection.multiplexerDemultiplexer.handleRequestStream(streamsHandler);\n                      keepAliveHandler_1.start();\n                      keepAliveSender_1 === null || keepAliveSender_1 === void 0 ? void 0 : keepAliveSender_1.start();\n                      return [3 /*break*/, 4];\n                    case 3:\n                      e_1 = _f.sent();\n                      connection.multiplexerDemultiplexer.connectionOutbound.send({\n                        type: Frames_1.FrameTypes.ERROR,\n                        streamId: 0,\n                        code: Errors_1.ErrorCodes.REJECTED_SETUP,\n                        message: (_e = e_1.message) !== null && _e !== void 0 ? _e : \"\",\n                        flags: Frames_1.Flags.NONE\n                      });\n                      connection.close(e_1 instanceof Errors_1.RSocketError ? e_1 : new Errors_1.RSocketError(Errors_1.ErrorCodes.REJECTED_SETUP, e_1.message));\n                      return [3 /*break*/, 4];\n                    case 4:\n                      return [2 /*return*/];\n                    case 5:\n                      {\n                        // frame should be handled earlier\n                        return [2 /*return*/];\n                      }\n\n                      _f.label = 6;\n                    case 6:\n                      {\n                        connection.multiplexerDemultiplexer.connectionOutbound.send({\n                          type: Frames_1.FrameTypes.ERROR,\n                          streamId: 0,\n                          code: Errors_1.ErrorCodes.UNSUPPORTED_SETUP,\n                          message: \"Unsupported setup\",\n                          flags: Frames_1.Flags.NONE\n                        });\n                        connection.close(new Errors_1.RSocketError(Errors_1.ErrorCodes.UNSUPPORTED_SETUP));\n                      }\n                      _f.label = 7;\n                    case 7:\n                      return [2 /*return*/];\n                  }\n                });\n              });\n            }, function (frame, outbound) {\n              if (frame.type === Frames_1.FrameTypes.RESUME) {\n                if (_this.sessionStore) {\n                  var multiplexerDemultiplexer = _this.sessionStore[frame.resumeToken.toString()];\n                  if (!multiplexerDemultiplexer) {\n                    outbound.send({\n                      type: Frames_1.FrameTypes.ERROR,\n                      streamId: 0,\n                      code: Errors_1.ErrorCodes.REJECTED_RESUME,\n                      message: \"No session found for the given resume token\",\n                      flags: Frames_1.Flags.NONE\n                    });\n                    outbound.close();\n                    return;\n                  }\n                  multiplexerDemultiplexer.resume(frame, outbound, outbound);\n                  return multiplexerDemultiplexer;\n                }\n                outbound.send({\n                  type: Frames_1.FrameTypes.ERROR,\n                  streamId: 0,\n                  code: Errors_1.ErrorCodes.REJECTED_RESUME,\n                  message: \"Resume is not enabled\",\n                  flags: Frames_1.Flags.NONE\n                });\n                outbound.close();\n                return;\n              } else if (frame.type === Frames_1.FrameTypes.SETUP) {\n                if (Frames_1.Flags.hasResume(frame.flags)) {\n                  if (!_this.sessionStore) {\n                    var error = new Errors_1.RSocketError(Errors_1.ErrorCodes.REJECTED_SETUP, \"No resume support\");\n                    outbound.send({\n                      type: Frames_1.FrameTypes.ERROR,\n                      streamId: 0,\n                      flags: Frames_1.Flags.NONE,\n                      code: error.code,\n                      message: error.message\n                    });\n                    outbound.close(error);\n                    return;\n                  }\n                  var multiplexerDumiltiplexer = new ClientServerMultiplexerDemultiplexer_1.ResumableClientServerInputMultiplexerDemultiplexer(ClientServerMultiplexerDemultiplexer_1.StreamIdGenerator.create(0), outbound, outbound, new Resume_1.FrameStore(),\n                  // TODO: add size parameter\n                  frame.resumeToken.toString(), _this.sessionStore, _this.sessionTimeout);\n                  _this.sessionStore[frame.resumeToken.toString()] = multiplexerDumiltiplexer;\n                  return multiplexerDumiltiplexer;\n                }\n              }\n              return new ClientServerMultiplexerDemultiplexer_1.ClientServerInputMultiplexerDemultiplexer(ClientServerMultiplexerDemultiplexer_1.StreamIdGenerator.create(0), outbound, outbound);\n            })];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  return RSocketServer;\n}();\nexports.RSocketServer = RSocketServer;","map":{"version":3,"names":["require","ClientServerMultiplexerDemultiplexer_1","Errors_1","Frames_1","RSocketSupport_1","Resume_1","RSocketServer","config","acceptor","transport","lease","serverSideKeepAlive","sessionStore","resume","undefined","sessionTimeout","_b","_a","prototype","bind","frame","connection","__awaiter","_this","type","FrameTypes","SETUP","RESUME","Flags","hasLease","flags","error","RSocketError","ErrorCodes","REJECTED_SETUP","multiplexerDemultiplexer","connectionOutbound","send","ERROR","streamId","NONE","code","message","close","leaseHandler","LeaseHandler","maxPendingRequests","requester","RSocketRequester","_d","_c","fragmentation","maxOutboundFragmentSize","accept","data","dataMimeType","metadata","metadataMimeType","keepAliveMaxLifetime","lifetime","keepAliveInterval","keepAlive","resumeToken","responder","_f","sent","keepAliveHandler_1","KeepAliveHandler","keepAliveSender_1","KeepAliveSender","connectionFrameHandler_1","DefaultConnectionFrameHandler","streamsHandler","DefaultStreamRequestHandler","onClose","e","connectionInbound","handleRequestStream","start","_e","e_1","UNSUPPORTED_SETUP","outbound","toString","REJECTED_RESUME","hasResume","multiplexerDumiltiplexer","ResumableClientServerInputMultiplexerDemultiplexer","StreamIdGenerator","create","FrameStore","ClientServerInputMultiplexerDemultiplexer","exports"],"sources":["../src/RSocketServer.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}