{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2021-2022 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.regexp.flags.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KeepAliveSender = exports.KeepAliveHandler = exports.DefaultConnectionFrameHandler = exports.DefaultStreamRequestHandler = exports.LeaseHandler = exports.RSocketRequester = void 0;\nvar Errors_1 = require(\"./Errors\");\nvar Frames_1 = require(\"./Frames\");\nvar RequestChannelStream_1 = require(\"./RequestChannelStream\");\nvar RequestFnFStream_1 = require(\"./RequestFnFStream\");\nvar RequestResponseStream_1 = require(\"./RequestResponseStream\");\nvar RequestStreamStream_1 = require(\"./RequestStreamStream\");\nvar RSocketRequester = /** @class */function () {\n  function RSocketRequester(connection, fragmentSize, leaseManager) {\n    this.connection = connection;\n    this.fragmentSize = fragmentSize;\n    this.leaseManager = leaseManager;\n  }\n  RSocketRequester.prototype.fireAndForget = function (payload, responderStream) {\n    var handler = new RequestFnFStream_1.RequestFnFRequesterStream(payload, responderStream, this.fragmentSize, this.leaseManager);\n    if (this.leaseManager) {\n      this.leaseManager.requestLease(handler);\n    } else {\n      this.connection.multiplexerDemultiplexer.createRequestStream(handler);\n    }\n    return handler;\n  };\n  RSocketRequester.prototype.requestResponse = function (payload, responderStream) {\n    var handler = new RequestResponseStream_1.RequestResponseRequesterStream(payload, responderStream, this.fragmentSize, this.leaseManager);\n    if (this.leaseManager) {\n      this.leaseManager.requestLease(handler);\n    } else {\n      this.connection.multiplexerDemultiplexer.createRequestStream(handler);\n    }\n    return handler;\n  };\n  RSocketRequester.prototype.requestStream = function (payload, initialRequestN, responderStream) {\n    var handler = new RequestStreamStream_1.RequestStreamRequesterStream(payload, responderStream, this.fragmentSize, initialRequestN, this.leaseManager);\n    if (this.leaseManager) {\n      this.leaseManager.requestLease(handler);\n    } else {\n      this.connection.multiplexerDemultiplexer.createRequestStream(handler);\n    }\n    return handler;\n  };\n  RSocketRequester.prototype.requestChannel = function (payload, initialRequestN, isCompleted, responderStream) {\n    var handler = new RequestChannelStream_1.RequestChannelRequesterStream(payload, isCompleted, responderStream, this.fragmentSize, initialRequestN, this.leaseManager);\n    if (this.leaseManager) {\n      this.leaseManager.requestLease(handler);\n    } else {\n      this.connection.multiplexerDemultiplexer.createRequestStream(handler);\n    }\n    return handler;\n  };\n  RSocketRequester.prototype.metadataPush = function (metadata, responderStream) {\n    throw new Error(\"Method not implemented.\");\n  };\n  RSocketRequester.prototype.close = function (error) {\n    this.connection.close(error);\n  };\n  RSocketRequester.prototype.onClose = function (callback) {\n    this.connection.onClose(callback);\n  };\n  return RSocketRequester;\n}();\nexports.RSocketRequester = RSocketRequester;\nvar LeaseHandler = /** @class */function () {\n  function LeaseHandler(maxPendingRequests, multiplexer) {\n    this.maxPendingRequests = maxPendingRequests;\n    this.multiplexer = multiplexer;\n    this.pendingRequests = [];\n    this.expirationTime = 0;\n    this.availableLease = 0;\n  }\n  LeaseHandler.prototype.handle = function (frame) {\n    this.expirationTime = frame.ttl + Date.now();\n    this.availableLease = frame.requestCount;\n    while (this.availableLease > 0 && this.pendingRequests.length > 0) {\n      var handler = this.pendingRequests.shift();\n      this.availableLease--;\n      this.multiplexer.createRequestStream(handler);\n    }\n  };\n  LeaseHandler.prototype.requestLease = function (handler) {\n    var availableLease = this.availableLease;\n    if (availableLease > 0 && Date.now() < this.expirationTime) {\n      this.availableLease = availableLease - 1;\n      this.multiplexer.createRequestStream(handler);\n      return;\n    }\n    if (this.pendingRequests.length >= this.maxPendingRequests) {\n      handler.handleReject(new Errors_1.RSocketError(Errors_1.ErrorCodes.REJECTED, \"No available lease given\"));\n      return;\n    }\n    this.pendingRequests.push(handler);\n  };\n  LeaseHandler.prototype.cancelRequest = function (handler) {\n    var index = this.pendingRequests.indexOf(handler);\n    if (index > -1) {\n      this.pendingRequests.splice(index, 1);\n    }\n  };\n  return LeaseHandler;\n}();\nexports.LeaseHandler = LeaseHandler;\nvar DefaultStreamRequestHandler = /** @class */function () {\n  function DefaultStreamRequestHandler(rsocket, fragmentSize) {\n    this.rsocket = rsocket;\n    this.fragmentSize = fragmentSize;\n  }\n  DefaultStreamRequestHandler.prototype.handle = function (frame, stream) {\n    switch (frame.type) {\n      case Frames_1.FrameTypes.REQUEST_FNF:\n        if (this.rsocket.fireAndForget) {\n          new RequestFnFStream_1.RequestFnfResponderStream(frame.streamId, stream, this.rsocket.fireAndForget.bind(this.rsocket), frame);\n        }\n        return;\n      case Frames_1.FrameTypes.REQUEST_RESPONSE:\n        if (this.rsocket.requestResponse) {\n          new RequestResponseStream_1.RequestResponseResponderStream(frame.streamId, stream, this.fragmentSize, this.rsocket.requestResponse.bind(this.rsocket), frame);\n          return;\n        }\n        this.rejectRequest(frame.streamId, stream);\n        return;\n      case Frames_1.FrameTypes.REQUEST_STREAM:\n        if (this.rsocket.requestStream) {\n          new RequestStreamStream_1.RequestStreamResponderStream(frame.streamId, stream, this.fragmentSize, this.rsocket.requestStream.bind(this.rsocket), frame);\n          return;\n        }\n        this.rejectRequest(frame.streamId, stream);\n        return;\n      case Frames_1.FrameTypes.REQUEST_CHANNEL:\n        if (this.rsocket.requestChannel) {\n          new RequestChannelStream_1.RequestChannelResponderStream(frame.streamId, stream, this.fragmentSize, this.rsocket.requestChannel.bind(this.rsocket), frame);\n          return;\n        }\n        this.rejectRequest(frame.streamId, stream);\n        return;\n    }\n  };\n  DefaultStreamRequestHandler.prototype.rejectRequest = function (streamId, stream) {\n    stream.send({\n      type: Frames_1.FrameTypes.ERROR,\n      streamId: streamId,\n      flags: Frames_1.Flags.NONE,\n      code: Errors_1.ErrorCodes.REJECTED,\n      message: \"No available handler found\"\n    });\n  };\n  DefaultStreamRequestHandler.prototype.close = function () {};\n  return DefaultStreamRequestHandler;\n}();\nexports.DefaultStreamRequestHandler = DefaultStreamRequestHandler;\nvar DefaultConnectionFrameHandler = /** @class */function () {\n  function DefaultConnectionFrameHandler(connection, keepAliveHandler, keepAliveSender, leaseHandler, rsocket) {\n    this.connection = connection;\n    this.keepAliveHandler = keepAliveHandler;\n    this.keepAliveSender = keepAliveSender;\n    this.leaseHandler = leaseHandler;\n    this.rsocket = rsocket;\n  }\n  DefaultConnectionFrameHandler.prototype.handle = function (frame) {\n    switch (frame.type) {\n      case Frames_1.FrameTypes.KEEPALIVE:\n        this.keepAliveHandler.handle(frame);\n        return;\n      case Frames_1.FrameTypes.LEASE:\n        if (this.leaseHandler) {\n          this.leaseHandler.handle(frame);\n          return;\n        }\n        // TODO throw exception and close connection\n        return;\n      case Frames_1.FrameTypes.ERROR:\n        // TODO: add code validation\n        this.connection.close(new Errors_1.RSocketError(frame.code, frame.message));\n        return;\n      case Frames_1.FrameTypes.METADATA_PUSH:\n        if (this.rsocket.metadataPush) {\n          // this.rsocket.metadataPush()\n        }\n        return;\n      default:\n        this.connection.multiplexerDemultiplexer.connectionOutbound.send({\n          type: Frames_1.FrameTypes.ERROR,\n          streamId: 0,\n          flags: Frames_1.Flags.NONE,\n          message: \"Received unknown frame type\",\n          code: Errors_1.ErrorCodes.CONNECTION_ERROR\n        });\n      // TODO: throw an exception and close connection\n    }\n  };\n\n  DefaultConnectionFrameHandler.prototype.pause = function () {\n    var _a;\n    this.keepAliveHandler.pause();\n    (_a = this.keepAliveSender) === null || _a === void 0 ? void 0 : _a.pause();\n  };\n  DefaultConnectionFrameHandler.prototype.resume = function () {\n    var _a;\n    this.keepAliveHandler.start();\n    (_a = this.keepAliveSender) === null || _a === void 0 ? void 0 : _a.start();\n  };\n  DefaultConnectionFrameHandler.prototype.close = function (error) {\n    var _a;\n    this.keepAliveHandler.close();\n    (_a = this.rsocket.close) === null || _a === void 0 ? void 0 : _a.call(this.rsocket, error);\n  };\n  return DefaultConnectionFrameHandler;\n}();\nexports.DefaultConnectionFrameHandler = DefaultConnectionFrameHandler;\nvar KeepAliveHandlerStates;\n(function (KeepAliveHandlerStates) {\n  KeepAliveHandlerStates[KeepAliveHandlerStates[\"Paused\"] = 0] = \"Paused\";\n  KeepAliveHandlerStates[KeepAliveHandlerStates[\"Running\"] = 1] = \"Running\";\n  KeepAliveHandlerStates[KeepAliveHandlerStates[\"Closed\"] = 2] = \"Closed\";\n})(KeepAliveHandlerStates || (KeepAliveHandlerStates = {}));\nvar KeepAliveHandler = /** @class */function () {\n  function KeepAliveHandler(connection, keepAliveTimeoutDuration) {\n    this.connection = connection;\n    this.keepAliveTimeoutDuration = keepAliveTimeoutDuration;\n    this.state = KeepAliveHandlerStates.Paused;\n    this.outbound = connection.multiplexerDemultiplexer.connectionOutbound;\n  }\n  KeepAliveHandler.prototype.handle = function (frame) {\n    this.keepAliveLastReceivedMillis = Date.now();\n    if (Frames_1.Flags.hasRespond(frame.flags)) {\n      this.outbound.send({\n        type: Frames_1.FrameTypes.KEEPALIVE,\n        streamId: 0,\n        data: frame.data,\n        flags: frame.flags ^ Frames_1.Flags.RESPOND,\n        lastReceivedPosition: 0\n      });\n    }\n  };\n  KeepAliveHandler.prototype.start = function () {\n    if (this.state !== KeepAliveHandlerStates.Paused) {\n      return;\n    }\n    this.keepAliveLastReceivedMillis = Date.now();\n    this.state = KeepAliveHandlerStates.Running;\n    this.activeTimeout = setTimeout(this.timeoutCheck.bind(this), this.keepAliveTimeoutDuration);\n  };\n  KeepAliveHandler.prototype.pause = function () {\n    if (this.state !== KeepAliveHandlerStates.Running) {\n      return;\n    }\n    this.state = KeepAliveHandlerStates.Paused;\n    clearTimeout(this.activeTimeout);\n  };\n  KeepAliveHandler.prototype.close = function () {\n    this.state = KeepAliveHandlerStates.Closed;\n    clearTimeout(this.activeTimeout);\n  };\n  KeepAliveHandler.prototype.timeoutCheck = function () {\n    var now = Date.now();\n    var noKeepAliveDuration = now - this.keepAliveLastReceivedMillis;\n    if (noKeepAliveDuration >= this.keepAliveTimeoutDuration) {\n      this.connection.close(new Error(\"No keep-alive acks for \".concat(this.keepAliveTimeoutDuration, \" millis\")));\n    } else {\n      this.activeTimeout = setTimeout(this.timeoutCheck.bind(this), Math.max(100, this.keepAliveTimeoutDuration - noKeepAliveDuration));\n    }\n  };\n  return KeepAliveHandler;\n}();\nexports.KeepAliveHandler = KeepAliveHandler;\nvar KeepAliveSenderStates;\n(function (KeepAliveSenderStates) {\n  KeepAliveSenderStates[KeepAliveSenderStates[\"Paused\"] = 0] = \"Paused\";\n  KeepAliveSenderStates[KeepAliveSenderStates[\"Running\"] = 1] = \"Running\";\n  KeepAliveSenderStates[KeepAliveSenderStates[\"Closed\"] = 2] = \"Closed\";\n})(KeepAliveSenderStates || (KeepAliveSenderStates = {}));\nvar KeepAliveSender = /** @class */function () {\n  function KeepAliveSender(outbound, keepAlivePeriodDuration) {\n    this.outbound = outbound;\n    this.keepAlivePeriodDuration = keepAlivePeriodDuration;\n    this.state = KeepAliveSenderStates.Paused;\n  }\n  KeepAliveSender.prototype.sendKeepAlive = function () {\n    this.outbound.send({\n      type: Frames_1.FrameTypes.KEEPALIVE,\n      streamId: 0,\n      data: undefined,\n      flags: Frames_1.Flags.RESPOND,\n      lastReceivedPosition: 0\n    });\n  };\n  KeepAliveSender.prototype.start = function () {\n    if (this.state !== KeepAliveSenderStates.Paused) {\n      return;\n    }\n    this.state = KeepAliveSenderStates.Running;\n    this.activeInterval = setInterval(this.sendKeepAlive.bind(this), this.keepAlivePeriodDuration);\n  };\n  KeepAliveSender.prototype.pause = function () {\n    if (this.state !== KeepAliveSenderStates.Running) {\n      return;\n    }\n    this.state = KeepAliveSenderStates.Paused;\n    clearInterval(this.activeInterval);\n  };\n  KeepAliveSender.prototype.close = function () {\n    this.state = KeepAliveSenderStates.Closed;\n    clearInterval(this.activeInterval);\n  };\n  return KeepAliveSender;\n}();\nexports.KeepAliveSender = KeepAliveSender;","map":{"version":3,"names":["require","Errors_1","Frames_1","RequestChannelStream_1","RequestFnFStream_1","RequestResponseStream_1","RequestStreamStream_1","RSocketRequester","connection","fragmentSize","leaseManager","prototype","fireAndForget","payload","responderStream","handler","RequestFnFRequesterStream","requestLease","multiplexerDemultiplexer","createRequestStream","requestResponse","RequestResponseRequesterStream","requestStream","initialRequestN","RequestStreamRequesterStream","requestChannel","isCompleted","RequestChannelRequesterStream","metadataPush","metadata","Error","close","error","onClose","callback","exports","LeaseHandler","maxPendingRequests","multiplexer","pendingRequests","expirationTime","availableLease","handle","frame","ttl","Date","now","requestCount","length","shift","handleReject","RSocketError","ErrorCodes","REJECTED","push","cancelRequest","index","indexOf","splice","DefaultStreamRequestHandler","rsocket","stream","type","FrameTypes","REQUEST_FNF","RequestFnfResponderStream","streamId","bind","REQUEST_RESPONSE","RequestResponseResponderStream","rejectRequest","REQUEST_STREAM","RequestStreamResponderStream","REQUEST_CHANNEL","RequestChannelResponderStream","send","ERROR","flags","Flags","NONE","code","message","DefaultConnectionFrameHandler","keepAliveHandler","keepAliveSender","leaseHandler","KEEPALIVE","LEASE","METADATA_PUSH","connectionOutbound","CONNECTION_ERROR","pause","_a","resume","start","call","KeepAliveHandlerStates","KeepAliveHandler","keepAliveTimeoutDuration","state","Paused","outbound","keepAliveLastReceivedMillis","hasRespond","data","RESPOND","lastReceivedPosition","Running","activeTimeout","setTimeout","timeoutCheck","clearTimeout","Closed","noKeepAliveDuration","concat","Math","max","KeepAliveSenderStates","KeepAliveSender","keepAlivePeriodDuration","sendKeepAlive","undefined","activeInterval","setInterval","clearInterval"],"sources":["../src/RSocketSupport.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}