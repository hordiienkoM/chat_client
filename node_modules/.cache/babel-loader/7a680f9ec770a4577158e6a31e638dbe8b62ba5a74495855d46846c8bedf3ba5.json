{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2021-2022 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebsocketClientTransport = void 0;\nvar rsocket_core_1 = require(\"rsocket-core\");\nvar WebsocketDuplexConnection_1 = require(\"./WebsocketDuplexConnection\");\nvar WebsocketClientTransport = /** @class */function () {\n  function WebsocketClientTransport(options) {\n    var _a;\n    this.url = options.url;\n    this.factory = (_a = options.wsCreator) !== null && _a !== void 0 ? _a : function (url) {\n      return new WebSocket(url);\n    };\n  }\n  WebsocketClientTransport.prototype.connect = function (multiplexerDemultiplexerFactory) {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n      var websocket = _this.factory(_this.url);\n      websocket.binaryType = \"arraybuffer\";\n      var openListener = function () {\n        websocket.removeEventListener(\"open\", openListener);\n        websocket.removeEventListener(\"error\", errorListener);\n        resolve(new WebsocketDuplexConnection_1.WebsocketDuplexConnection(websocket, new rsocket_core_1.Deserializer(), multiplexerDemultiplexerFactory));\n      };\n      var errorListener = function (ev) {\n        websocket.removeEventListener(\"open\", openListener);\n        websocket.removeEventListener(\"error\", errorListener);\n        reject(ev.error);\n      };\n      websocket.addEventListener(\"open\", openListener);\n      websocket.addEventListener(\"error\", errorListener);\n    });\n  };\n  return WebsocketClientTransport;\n}();\nexports.WebsocketClientTransport = WebsocketClientTransport;","map":{"version":3,"names":["rsocket_core_1","require","WebsocketDuplexConnection_1","WebsocketClientTransport","options","url","factory","_a","wsCreator","WebSocket","prototype","connect","multiplexerDemultiplexerFactory","_this","Promise","resolve","reject","websocket","binaryType","openListener","removeEventListener","errorListener","WebsocketDuplexConnection","Deserializer","ev","error","addEventListener","exports"],"sources":["../src/WebsocketClientTransport.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;AAgBA,IAAAA,cAAA,GAAAC,OAAA;AAUA,IAAAC,2BAAA,GAAAD,OAAA;AAQA,IAAAE,wBAAA;EAIE,SAAAA,yBAAYC,OAAsB;;IAChC,IAAI,CAACC,GAAG,GAAGD,OAAO,CAACC,GAAG;IACtB,IAAI,CAACC,OAAO,GAAG,CAAAC,EAAA,GAAAH,OAAO,CAACI,SAAS,cAAAD,EAAA,cAAAA,EAAA,GAAK,UAACF,GAAW;MAAK,WAAII,SAAS,CAACJ,GAAG,CAAC;IAAlB,CAAmB;EAC3E;EAEAF,wBAAA,CAAAO,SAAA,CAAAC,OAAO,GAAP,UACEC,+BAE+C;IAHjD,IAAAC,KAAA;IAKE,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM;MACjC,IAAMC,SAAS,GAAGJ,KAAI,CAACP,OAAO,CAACO,KAAI,CAACR,GAAG,CAAC;MAExCY,SAAS,CAACC,UAAU,GAAG,aAAa;MAEpC,IAAMC,YAAY,GAAG,SAAAA,CAAA;QACnBF,SAAS,CAACG,mBAAmB,CAAC,MAAM,EAAED,YAAY,CAAC;QACnDF,SAAS,CAACG,mBAAmB,CAAC,OAAO,EAAEC,aAAa,CAAC;QACrDN,OAAO,CACL,IAAIb,2BAAA,CAAAoB,yBAAyB,CAC3BL,SAAS,EACT,IAAIjB,cAAA,CAAAuB,YAAY,EAAE,EAClBX,+BAA+B,CAChC,CACF;MACH,CAAC;MAED,IAAMS,aAAa,GAAG,SAAAA,CAACG,EAAc;QACnCP,SAAS,CAACG,mBAAmB,CAAC,MAAM,EAAED,YAAY,CAAC;QACnDF,SAAS,CAACG,mBAAmB,CAAC,OAAO,EAAEC,aAAa,CAAC;QACrDL,MAAM,CAACQ,EAAE,CAACC,KAAK,CAAC;MAClB,CAAC;MAEDR,SAAS,CAACS,gBAAgB,CAAC,MAAM,EAAEP,YAAY,CAAC;MAChDF,SAAS,CAACS,gBAAgB,CAAC,OAAO,EAAEL,aAAa,CAAC;IACpD,CAAC,CAAC;EACJ,CAAC;EACH,OAAAlB,wBAAC;AAAD,CAAC,CAzCD;AAAawB,OAAA,CAAAxB,wBAAA,GAAAA,wBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}