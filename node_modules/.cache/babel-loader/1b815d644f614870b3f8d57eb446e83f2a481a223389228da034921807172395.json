{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2021-2022 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TcpClientTransport = void 0;\nvar rsocket_core_1 = require(\"rsocket-core\");\nvar net_1 = __importDefault(require(\"net\"));\nvar TcpDuplexConnection_1 = require(\"./TcpDuplexConnection\");\nvar TcpClientTransport = /** @class */function () {\n  function TcpClientTransport(options) {\n    var _a;\n    this.connectionOptions = options.connectionOptions;\n    this.socketCreator = (_a = options.socketCreator) !== null && _a !== void 0 ? _a : function (options) {\n      return net_1.default.connect(options);\n    };\n  }\n  TcpClientTransport.prototype.connect = function (multiplexerDemultiplexerFactory) {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n      var socket;\n      var openListener = function () {\n        socket.removeListener(\"error\", errorListener);\n        socket.removeListener(\"close\", errorListener);\n        socket.removeListener(\"end\", errorListener);\n        resolve(new TcpDuplexConnection_1.TcpDuplexConnection(socket, new rsocket_core_1.Deserializer(), multiplexerDemultiplexerFactory));\n      };\n      var errorListener = function (error) {\n        socket.removeListener(\"error\", errorListener);\n        socket.removeListener(\"close\", errorListener);\n        socket.removeListener(\"end\", errorListener);\n        reject(error);\n      };\n      socket = _this.socketCreator(_this.connectionOptions);\n      socket.once(\"connect\", openListener);\n      socket.once(\"error\", errorListener);\n      socket.once(\"close\", errorListener);\n      socket.once(\"end\", errorListener);\n    });\n  };\n  return TcpClientTransport;\n}();\nexports.TcpClientTransport = TcpClientTransport;","map":{"version":3,"names":["rsocket_core_1","require","net_1","__importDefault","TcpDuplexConnection_1","TcpClientTransport","options","connectionOptions","socketCreator","_a","default","connect","prototype","multiplexerDemultiplexerFactory","_this","Promise","resolve","reject","socket","openListener","removeListener","errorListener","TcpDuplexConnection","Deserializer","error","once","exports"],"sources":["../src/TcpClientTransport.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,IAAAA,cAAA,GAAAC,OAAA;AAUA,IAAAC,KAAA,GAAAC,eAAA,CAAAF,OAAA;AACA,IAAAG,qBAAA,GAAAH,OAAA;AAgBA,IAAAI,kBAAA;EAIE,SAAAA,mBAAYC,OAAyB;;IACnC,IAAI,CAACC,iBAAiB,GAAGD,OAAO,CAACC,iBAAiB;IAClD,IAAI,CAACC,aAAa,GAChB,CAAAC,EAAA,GAAAH,OAAO,CAACE,aAAa,cAAAC,EAAA,cAAAA,EAAA,GAAK,UAACH,OAAO;MAAK,OAAAJ,KAAA,CAAAQ,OAAG,CAACC,OAAO,CAACL,OAAO,CAAC;IAApB,CAAqB;EAChE;EAEAD,kBAAA,CAAAO,SAAA,CAAAD,OAAO,GAAP,UACEE,+BAE+C;IAHjD,IAAAC,KAAA;IAKE,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM;MACjC,IAAIC,MAAkB;MAEtB,IAAMC,YAAY,GAAG,SAAAA,CAAA;QACnBD,MAAM,CAACE,cAAc,CAAC,OAAO,EAAEC,aAAa,CAAC;QAC7CH,MAAM,CAACE,cAAc,CAAC,OAAO,EAAEC,aAAa,CAAC;QAC7CH,MAAM,CAACE,cAAc,CAAC,KAAK,EAAEC,aAAa,CAAC;QAC3CL,OAAO,CACL,IAAIZ,qBAAA,CAAAkB,mBAAmB,CACrBJ,MAAM,EACN,IAAIlB,cAAA,CAAAuB,YAAY,EAAE,EAClBV,+BAA+B,CAChC,CACF;MACH,CAAC;MAED,IAAMQ,aAAa,GAAG,SAAAA,CAACG,KAAY;QACjCN,MAAM,CAACE,cAAc,CAAC,OAAO,EAAEC,aAAa,CAAC;QAC7CH,MAAM,CAACE,cAAc,CAAC,OAAO,EAAEC,aAAa,CAAC;QAC7CH,MAAM,CAACE,cAAc,CAAC,KAAK,EAAEC,aAAa,CAAC;QAC3CJ,MAAM,CAACO,KAAK,CAAC;MACf,CAAC;MAEDN,MAAM,GAAGJ,KAAI,CAACN,aAAa,CAACM,KAAI,CAACP,iBAAiB,CAAC;MAEnDW,MAAM,CAACO,IAAI,CAAC,SAAS,EAAEN,YAAY,CAAC;MACpCD,MAAM,CAACO,IAAI,CAAC,OAAO,EAAEJ,aAAa,CAAC;MACnCH,MAAM,CAACO,IAAI,CAAC,OAAO,EAAEJ,aAAa,CAAC;MACnCH,MAAM,CAACO,IAAI,CAAC,KAAK,EAAEJ,aAAa,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC;EACH,OAAAhB,kBAAC;AAAD,CAAC,CA9CD;AAAaqB,OAAA,CAAArB,kBAAA,GAAAA,kBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}